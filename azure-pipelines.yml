# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
  - rhel

pool:
  vmImage: 'windows-2022'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(System.DefaultWorkingDirectory)\AppxPackages'

steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: '69a61c30-d0ea-48c2-b3dc-5605a3802544'
      pipeline: '15'
      specificBuildWithTriggering: true
      buildVersionToDownload: 'latest'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: CmdLine@2
    inputs:
      script: |
        mkdir x64
        move $(System.ArtifactsDirectory)\drop\install_x64_rootfs.tar.gz x64\install9.tar.gz

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: '69a61c30-d0ea-48c2-b3dc-5605a3802544'
      pipeline: '11'
      specificBuildWithTriggering: true
      buildVersionToDownload: 'latest'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: CmdLine@2
    inputs:
      script: |
        mkdir x64
        move $(System.ArtifactsDirectory)\drop\install_x64_rootfs.tar.gz x64\install8.tar.gz

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific'
      project: '69a61c30-d0ea-48c2-b3dc-5605a3802544'
      pipeline: '14'
      specificBuildWithTriggering: true
      buildVersionToDownload: 'latest'
      downloadType: 'single'
      artifactName: 'drop'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: CmdLine@2
    inputs:
      script: |
        mkdir x64
        move $(System.ArtifactsDirectory)\drop\install_x64_rootfs.tar.gz x64\install.tar.gz

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  - task: DownloadSecureFile@1
    name: signingCertDD0
    inputs:
      secureFile: 'store.pfx'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        version=$(sed -n -E '/^ +Version=/s/^ +Version="([0-9\.]*)(.*)/\1/p' PengwinEnterprise8/Package.appxmanifest)
        sed -E -i "s/(^.*commandline.*PengwinEnterprise8_)([0-9\.]+)(_.*$)/\1${version}\3/g" PengwinEnterprise8/Public/Fragments/PengwinEnterprise8.json
        
        version=$(sed -n -E '/^ +Version=/s/^ +Version="([0-9\.]*)(.*)/\1/p' PengwinEnterprise9/Package.appxmanifest)
        sed -E -i "s/(^.*commandline.*PengwinEnterprise9_)([0-9\.]+)(_.*$)/\1${version}\3/g" PengwinEnterprise9/Public/Fragments/PengwinEnterprise9.json
        
        version=$(sed -n -E '/^ +Version=/s/^ +Version="([0-9\.]*)(.*)/\1/p' PengwinEnterprise/Package.appxmanifest)
        sed -E -i "s/(^.*commandline.*WLinuxEnterprise_)([0-9\.]+)(_.*$)/\1${version}\3/g" PengwinEnterprise/Public/Fragments/PengwinEnterprise7.json
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/t:PengwinEnterprise9 /m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCertDD0.secureFilePath)" /p:PackageCertificatePassword="1"'
      platform: 'x64'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'
  - task: TrustedSigning@0
    inputs:
      AzureTenantID: '$(tenant-id)'
      AzureClientID: '$(client-id)'
      AzureClientSecret: '$(client-secret)'
      Endpoint: 'https://eus.codesigning.azure.net/'
      CodeSigningAccountName: 'WWFCodeSign'
      CertificateProfileName: 'WWFAppSign'
      FilesFolder: '$(appxPackageDir)'
      FilesFolderFilter: 'msixbundle'
      FilesFolderRecurse: true
      FileDigest: 'SHA256'
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/t:PengwinEnterprise8 /m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCertDD0.secureFilePath)" /p:PackageCertificatePassword="1"'
      platform: 'x64'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'

  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/t:PengwinEnterprise7 /m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCertDD0.secureFilePath)" /p:PackageCertificatePassword="1"'
      platform: 'x64'
      configuration: '$(buildConfiguration)'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'

  - task: TrustedSigning@0
    inputs:
      AzureTenantID: '$(tenant-id)'
      AzureClientID: '$(client-id)'
      AzureClientSecret: '$(client-secret)'
      Endpoint: 'https://eus.codesigning.azure.net/'
      CodeSigningAccountName: 'WWFCodeSign'
      CertificateProfileName: 'WWFAppSign'
      FilesFolder: '$(appxPackageDir)'
      FilesFolderFilter: 'msixbundle'
      FilesFolderRecurse: true
      FileDigest: 'SHA256'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: '**\PengwinEnterprise9*.*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: '**\PengwinEnterprise9*.*xbundle'
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: '**\PengwinEnterprise8*.*xbundle'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: '**\PengwinEnterprise8*.*xbundle'
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: '**\PengwinEnterprise7_7*.*xbundle'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(appxPackageDir)'
      Contents: '**\PengwinEnterprise7_7*.*xbundle'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
