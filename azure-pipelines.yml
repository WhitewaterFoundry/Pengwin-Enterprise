# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(System.DefaultWorkingDirectory)\AppxPackages'

steps:
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: '69a61c30-d0ea-48c2-b3dc-5605a3802544'
    pipeline: '12'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
- task: CmdLine@2
  inputs:
    script: |
      mkdir x64
      move $(System.ArtifactsDirectory)\drop\install_x64_rootfs.tar.gz x64\install8.tar.gz

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: '69a61c30-d0ea-48c2-b3dc-5605a3802544'
    pipeline: '7'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
- task: CmdLine@2
  inputs:
    script: |
      mkdir x64
      move $(System.ArtifactsDirectory)\drop\install_x64_rootfs.tar.gz x64\install.tar.gz

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: DownloadSecureFile@1
  name: signingCert
  inputs:
    secureFile: 'store.pfx'
- task: DownloadSecureFile@1
  name: signingCertDD0
  inputs:
    secureFile: 'store.pfx'
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:PengwinEnterprise /m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)" /p:PackageCertificatePassword="1"'
    platform: 'x64'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
    msbuildArchitecture: 'x64'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      version=$(sed -n -E '/^ +Version=/s/^ +Version="([0-9\.]*)(.*)/\1/p' PengwinEnterprise8/Package.appxmanifest)
      sed -E -i "s/(^.*commandline.*PengwinEnterprise8_)([0-9\.]+)(_.*$)/\1${version}\3/" PengwinEnterprise8/Public/Fragments/PengwinEnterprise8.json
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:PengwinEnterprise8 /m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCertDD0.secureFilePath)" /p:PackageCertificatePassword="1"'
    platform: 'x64'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
    msbuildArchitecture: 'x64'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(appxPackageDir)'
    Contents: '**\*bundle.*xupload'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(appxPackageDir)'
    Contents: '**\*.*xbundle'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: store-flight@0
  continueOnError: true
  timeoutInMinutes: 10
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9N2XZFWMRRQW'
    flightName: 'Azure Pipelines'
    packagePath: '$(Build.ArtifactStagingDirectory)\**\PengwinEnterprise8*bundle.*xupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '0'
- task: store-publish@0
  continueOnError: true
  timeoutInMinutes: 10
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9N2XZFWMRRQW'
    metadataUpdateMethod: 'TextMetadata'
    metadataPath: '$(System.DefaultWorkingDirectory)\appMetadata8'
    updateImages: false
    packagePath: '$(Build.ArtifactStagingDirectory)\**\PengwinEnterprise8*bundle.*xupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '3'
- task: store-flight@0
  continueOnError: true
  timeoutInMinutes: 10
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9N8LP0X93VCP'
    flightName: 'Azure Pipelines'
    packagePath: '$(Build.ArtifactStagingDirectory)\**\PengwinEnterprise_7*bundle.*xupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '0'
- task: store-publish@0
  continueOnError: true
  timeoutInMinutes: 10
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9N8LP0X93VCP'
    metadataUpdateMethod: 'TextMetadata'
    metadataPath: '$(System.DefaultWorkingDirectory)\appMetadata'
    updateImages: false
    packagePath: '$(Build.ArtifactStagingDirectory)\**\PengwinEnterprise_7*bundle.*xupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '3'
